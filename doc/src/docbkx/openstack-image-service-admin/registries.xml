<?xml version="1.0"?>
<!-- Converted by db4-upgrade version 1.0 -->
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0-extension RaxBook-1.0" xml:id="image-registries"><info><title>Image Registries</title></info>
  
  <para>
    Image metadata made available through Glance can be stored in image
    `registries`. Image registries are any web service that adheres to
    the Glance REST-like API for image metadata.
  </para>
  <para>
    Glance comes with a server program
    <literal>glance-registry</literal> that acts as a reference
    implementation of a Glance Registry.
  </para>
  <para>
    Please see the section about Controlling Servers for more information on starting up the
    Glance registry server that ships with Glance.
  </para>
  <section xml:id="glance-registry-api"><info><title>Glance Registry API</title></info>
    
    <para>
      Any web service that publishes an API that conforms to the
      following REST-like API specification can be used by Glance as a
      registry.
    </para>
    <section xml:id="api-in-summary"><info><title>API in Summary</title></info>
      
      <para>
        The following is a brief description of the Glance API:
      </para>
      <screen>
GET     /images         Return brief information about public images
GET     /images/detail  Return detailed information about public images
GET     /images/&lt;ID&gt;    Return metadata about an image in HTTP headers
POST    /images         Register metadata about a new image
PUT     /images/&lt;ID&gt;    Update metadata about an existing image
DELETE  /images/&lt;ID&gt;    Remove an image's metadata from the registry
</screen>
    </section>
  </section>
  <section xml:id="filtering-images-returned-via-get-images-and-get-imagesdetail"><info><title>Filtering Images Returned via <literal>GET /images</literal>
    and <literal>GET /images/detail</literal></title></info>
    
    <para>
      Both the <literal>GET /images</literal> and
      <literal>GET /images/detail</literal> requests take query
      parameters that serve to filter the returned list of images. The
      following list details these query parameters.
    </para>
    <itemizedlist>
      <listitem>
        <para>
          <literal>name=NAME</literal>
        </para>
        <para>
          Filters images having a <literal>name</literal> attribute
          matching <literal>NAME</literal>.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>container_format=FORMAT</literal>
        </para>
        <para>
          Filters images having a <literal>container_format</literal>
          attribute matching <literal>FORMAT</literal>
        </para>
        
      </listitem>
      <listitem>
        <para>
          <literal>disk_format=FORMAT</literal>
        </para>
        <para>
          Filters images having a <literal>disk_format</literal>
          attribute matching <literal>FORMAT</literal>
        </para>
      
      </listitem>
      <listitem>
        <para>
          <literal>status=STATUS</literal>
        </para>
        <para>
          Filters images having a <literal>status</literal> attribute
          matching <literal>STATUS</literal>
        </para>
        
      </listitem>
      <listitem>
        <para>
          <literal>size_min=BYTES</literal>
        </para>
        <para>
          Filters images having a <literal>size</literal> attribute
          greater than or equal to <literal>BYTES</literal>
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>size_max=BYTES</literal>
        </para>
        <para>
          Filters images having a <literal>size</literal> attribute less
          than or equal to <literal>BYTES</literal>
        </para>
      </listitem>
    </itemizedlist>
    <para>
      These two resources also accept sort parameters:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          <literal>sort_key=KEY</literal>
        </para>
        <para>
          Results will be ordered by the specified image attribute
          <literal>KEY</literal>. Accepted values include
          <literal>id</literal>, <literal>name</literal>,
          <literal>status</literal>, <literal>disk_format</literal>,
          <literal>container_format</literal>, <literal>size</literal>,
          <literal>created_at</literal> (default) and
          <literal>updated_at</literal>.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>sort_dir=DIR</literal>
        </para>
        <para>
          Results will be sorted in the direction
          <literal>DIR</literal>. Accepted values are
          <literal>asc</literal> for ascending or
          <literal>desc</literal> (default) for descending.
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="post-images"><info><title><literal>POST /images</literal></title></info>
    
    <para>
      The body of the request will be a JSON-encoded set of data about
      the image to add to the registry. It will be in the following
      format:
    </para>
    <screen>
{'image':
  {'id': &lt;ID&gt;|None,
   'name': &lt;NAME&gt;,
   'status': &lt;STATUS&gt;,
   'disk_format': &lt;DISK_FORMAT&gt;,
   'container_format': &lt;CONTAINER_FORMAT&gt;,
   'properties': [ ... ]
  }
}
</screen>
    <para>
      The request shall validate the following conditions and return a
      <literal>400 Bad request</literal> when any of the conditions are
      not met:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          <literal>status</literal> must be non-empty, and must be one
          of <emphasis role="strong">active</emphasis>,
          <emphasis role="strong">saving</emphasis>,
          <emphasis role="strong">queued</emphasis>, or
          <emphasis role="strong">killed</emphasis>
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>disk_format</literal> must be non-empty, and must be
          one of <emphasis role="strong">ari</emphasis>,
          <emphasis role="strong">aki</emphasis>,
          <emphasis role="strong">ami</emphasis>,
          <emphasis role="strong">raw</emphasis>,
          <emphasis role="strong">iso</emphasis>,
          <emphasis role="strong">vhd</emphasis>,
          <emphasis role="strong">vdi</emphasis>,
          <emphasis role="strong">qcow2</emphasis>, or
          <emphasis role="strong">vmdk</emphasis>
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>container_format</literal> must be non-empty, and
          must be on of <emphasis role="strong">ari</emphasis>,
          <emphasis role="strong">aki</emphasis>,
          <emphasis role="strong">ami</emphasis>,
          <emphasis role="strong">bare</emphasis>, or
          <emphasis role="strong">ovf</emphasis>
        </para>
      </listitem>
      <listitem>
        <para>
          If <literal>disk_format</literal> <emphasis>or</emphasis>
          <literal>container_format</literal> is
          <emphasis role="strong">ari</emphasis>,
          <emphasis role="strong">aki</emphasis>,
          <emphasis role="strong">ami</emphasis>, then
          <emphasis>both</emphasis> <literal>disk_format</literal> and
          <literal>container_format</literal> must be the same.
        </para>
      </listitem>
    </itemizedlist>
    <section xml:id="examples"><info><title>Examples</title></info>
      
      <para>
        ..todo:: Complete examples for Glance registry API
      </para>
    </section>
  </section>
</chapter>
