<?xml version="1.0"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="glance-architecture"><info><title>Glance Architecture</title></info><para>Glance is designed to be as adaptable as possible for various back-end storage and registry database solutions. There is a main Glance API server (the glance-api program) that serves as the communications hub between various client programs, the registry of image metadata, and the storage systems that actually contain the virtual machine image data.</para>

<para>From a birdseye perspective, one can visualize the Glance architectural model like so:</para>
    
        <para><inlinemediaobject>
            <imageobject>
                <imagedata scale="80" fileref="../figures/glancearch.png"/></imageobject>
            
        </inlinemediaobject></para>
    <section><title>What is a Registry Server? </title>
        <para>A registry server is any service that publishes image metadata that conforms to the
            Glance Registry REST-ful API. Glance comes with a reference implementation of a registry
            server called glance-registry, but this is only a reference implementation that uses a
            SQL database for its metadata storage.</para></section>
    <section><title>What is a Store?</title><para>A store is a Python class that inherits from glance.store.Backend and conforms to that classâ€™ API for reading, writing, and deleting virtual machine image data.
        
        Glance currently ships with stores for S3, Swift, a simple filesystem store, and a read-only HTTP(S) store.
        
        Implementors are encouraged to create stores for other backends, including other distributed storage systems like Sheepdog or Ceph.</para></section>
    </chapter>