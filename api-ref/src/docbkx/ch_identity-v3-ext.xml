<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
    <!ENTITY % common_project  SYSTEM "../wadls/common_project.ent">
    %common_project;
]>
<chapter xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:linkend="http://www.w3.org/1999/linkend"
    xmlns:xref="http://www.w3.org/1999/xref"
    xmlns:wadl="http://wadl.dev.java.net/2009/02"
    version="5.0-extension RackBook-2.0" xml:id="identity-v3-ext"
    role="api-reference">
    <title>Identity API v3 extensions (CURRENT)</title>
    <section xml:id="identity_v3_OS-OAUTH1-ext">
        <title>OAuth extension (OS-OAUTH1)</title>
        <para>Enable users to delegate roles to third-party consumers
            through the <link xlink:href="http://oauth.net/core/1.0a/"
                >OAuth 1.0a specification</link>.</para>
        <para>A user is an Identity API user who delegates its
            roles and who authorizes request tokens. A consumer is a
            third-party application that uses OAuth to access a
            protected resource. An OAuth-derived token enables admin
            users to act on behalf of the authorizing user. A request
            token is a token that the consumer uses to get
            authorization from the user and exchanges with an OAuth
            verifier for an access token. The OAuth verifier is a
            required string that is provided with the corresponding
            request token in exchange for an access token. An access
            token is a token that the consumer uses to request
            Identity API tokens on behalf of the authorizing
            user instead of using the credentials for the user.</para>
        <para>Request and access tokens use token keys to identify
            themselves. For OpenStack purposes, the token key is the
            token ID. The consumer uses a token secret to establish
            ownership of a specified token. Both request and access
            tokens have token secrets.</para>
        <para>Delegated authentication through OAuth occurs as
            follows:</para>
        <orderedlist>
            <listitem>
                <para>A user creates a consumer.</para>
            </listitem>
            <listitem>
                <para>The consumer gets an unauthorized request token.
                    Then, the consumer uses the request token to
                    initiate user authorization.</para>
            </listitem>
            <listitem>
                <para>The user authorizes the request token.</para>
            </listitem>
            <listitem>
                <para>The consumer exchanges the authorized request
                    token and the OAuth verifier for an access
                    token.</para>
                <para>The authorizing user receives the request token
                    key from the consumer out-of-band.</para>
            </listitem>
            <listitem>
                <para>The consumer uses the access token to request an
                    Identity API token.</para>
            </listitem>
        </orderedlist>
        <wadl:resources
            href="../wadls/identity-api/src/v3/wadl/OS-OAUTH1-v3.wadl"
            xmlns:wadl="http://wadl.dev.java.net/2009/02"/>
    </section>
    <section xml:id="identity_v3_OS-TRUST-ext">
        <title>Trust extension (OS-TRUST)</title>
        <para>Create a trust.</para>
        <para>
            A trust is an OpenStack Identity extension that enables delegation
            and, optionally, impersonation through <code>keystone</code>. A
            trust extension defines a relationship between a trustor and
            trustee. A trustor is the user who delegates a limited set of
            their own rights to  another user. A trustee is the user whose
            trust is being delegated to, for a limited time.
        </para>
        <para>
            The trust can eventually enable the trustee to impersonate the
            trustor. For security reasons, some safety measures are added. For
            example, if a trustor loses a given role, any trusts and the
            related tokens that the user issued with that role are
            automatically revoked.
        </para>
        <para>For more information, see <link
            xlink:href="http://docs.openstack.org/admin-guide-cloud/content/section_keystone-trusts.html">Use trusts</link>.</para>
        <wadl:resources
            href="../wadls/identity-api/src/v3/wadl/OS-TRUST-v3.wadl"
            xmlns:wadl="http://wadl.dev.java.net/2009/02"/>
    </section>
</chapter>
