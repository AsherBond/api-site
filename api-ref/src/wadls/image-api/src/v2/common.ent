<!--
   A collection of common faults, these are pretty much expected
   in every request.
   -->
<!ENTITY commonFaults '
   <response xmlns="http://wadl.dev.java.net/2009/02">
<representation mediaType="application/xml" element="imageapi:imageapiFault"/>
<representation mediaType="application/json"/>
</response>
<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
   <representation mediaType="application/xml" element="imageapi:badRequest"/>
   <representation mediaType="application/json"/>
</response>
<response status="401" xmlns="http://wadl.dev.java.net/2009/02">
   <representation mediaType="application/xml" element="imageapi:unauthorized"/>
   <representation mediaType="application/json"/>
</response>
<response status="403" xmlns="http://wadl.dev.java.net/2009/02">
   <representation mediaType="application/xml" element="imageapi:forbidden"/>
   <representation mediaType="application/json"/>
</response>
<response status="405" xmlns="http://wadl.dev.java.net/2009/02">
   <representation mediaType="application/xml" element="imageapi:badMethod"/>
   <representation mediaType="application/json"/>
</response>
<response status="413" xmlns="http://wadl.dev.java.net/2009/02">
   <representation mediaType="application/xml" element="imageapi:overLimit"/>
   <representation mediaType="application/json"/>
</response>
<response status="503" xmlns="http://wadl.dev.java.net/2009/02">
   <representation mediaType="application/xml" element="imageapi:serviceUnavailable"/>
   <representation mediaType="application/json"/>
</response>
'>
<!-- Faults on GET -->
<!ENTITY getFaults '
   <response status="404" xmlns="http://wadl.dev.java.net/2009/02">
<representation mediaType="application/xml" element="imageapi:itemNotFound"/>
<representation mediaType="application/json"/>
</response>'>
<!--
   Faults on POST/PUT
   -->
<!ENTITY postPutFaults
   '
   <response status="415" xmlns="http://wadl.dev.java.net/2009/02">
<representation mediaType="application/xml" element="imageapi:badMediaType"/>
<representation mediaType="application/json"/>
</response>
'>
<!ENTITY imageListReqParameters '
<param xmlns="http://wadl.dev.java.net/2009/02" name="name"
   style="query" required="false" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Filter parameter. Name of the image as a string.</para>
</wadl:doc>
</param>
<param xmlns="http://wadl.dev.java.net/2009/02" name="visibility"
   style="query" required="false" type="imageapi:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>
    Filter parameter. Image visibility. Valid values are
    <code>public</code>, <code>private</code>, and <code>shared</code>.
    Default is <code>public</code>, <code>private</code>, and
    <code>shared</code> images with <code>accepted</code> member status.
   </para>
</wadl:doc>
</param>
<param xmlns="http://wadl.dev.java.net/2009/02" name="member_status"
   style="query" required="false" type="imageapi:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>
    Filter parameter. Only show images with the specified   member status.
    Valid values are <code>accepted</code>, <code>pending</code>,
    <code>rejected</code>, and <code>all</code>. Default is
    <code>accepted</code>.
   </para>
</wadl:doc>
</param>
<param xmlns="http://wadl.dev.java.net/2009/02" name="owner"
   style="query" required="false" type="imageapi:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Filter parameter. Shows images shared with me and the
      specified owner, where the owner is a tenant
      ID.
   </para>
</wadl:doc>
</param>
<param xmlns="http://wadl.dev.java.net/2009/02" name="status"
   style="query" required="false" type="xsd:int">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Filter parameter. The image status, such as queued,
      saving, active, killed, deleted, and
      pending_delete.
   </para>
</wadl:doc>
</param>
<param xmlns="http://wadl.dev.java.net/2009/02" name="size_min"
   style="query" required="false" type="xsd:string" default="ALL">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Filter parameter. Value of the minimum size of the image
      in bytes.
   </para>
</wadl:doc>
</param>
<param xmlns="http://wadl.dev.java.net/2009/02" name="size_max"
   style="query" required="false" type="xsd:string" default="ALL">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Filter parameter. Value of the maximum size of the image
      in bytes.
   </para>
</wadl:doc>
</param>
<param xmlns="http://wadl.dev.java.net/2009/02" name="sort_key"
   style="query" required="false" type="xsd:string" default="ALL">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Sort key. All image attributes can be used as the
      sort_key, except tags and link attributes. Default is
      <code>created_at</code>.
   </para>
</wadl:doc>
</param>
<param xmlns="http://wadl.dev.java.net/2009/02" name="sort_dir"
   style="query" required="false" type="xsd:string" default="ALL">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Sort direction. Valid values are <code>asc</code>
      (ascending) and <code>desc</code> (descending). Default is
      <code>desc</code>.
   </para>
</wadl:doc>
</param>
<param xmlns="http://wadl.dev.java.net/2009/02" name="tag"
   style="query" required="false" type="xsd:string" default="ALL">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Image tag. For example,
      <code>?tag="cirros"</code>.
   </para>
</wadl:doc>
</param>'>
<!ENTITY imagesParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="images"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>An <code>images</code> object.</para>
</wadl:doc>
</param>'>
<!ENTITY imageParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="image"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>An <code>image</code> object.</para>
</wadl:doc>
</param>'>
<!ENTITY statusParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="status"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The image status.</para>
</wadl:doc>
</param>'>
<!ENTITY nameParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="name"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The name of the image.</para>
   <para>If this field has no value, its
      value is <code>None</code>.
   </para>
</wadl:doc>
</param>'>
<!ENTITY container_formatParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="container_format" style="plain" required="true"
   type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>
      The container format of image.
   </para>
   <para>If this field has no value, its
      value is <code>None</code>.
   </para>
</wadl:doc>
</param>'>
<!ENTITY created_atParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="created_at"
   style="plain" required="true" type="xsd:datetime">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The date and time when the image was created.</para>
</wadl:doc>
</param>'>
<!ENTITY disk_formatParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="disk_format"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>
      The disk format of the image.
   </para>
   <para>If this field has no value, its
      value is <code>None</code>.
   </para>
</wadl:doc>
</param>'>
<!ENTITY updated_atParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="updated_at"
   style="plain" required="true" type="xsd:datetime">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The date and time when the image was last updated.</para>
</wadl:doc>
</param>'>
<!ENTITY min_diskParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="min_disk"
   style="plain" required="true" type="xsd:int">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The minimum disk size in GB that is required to boot the image.</para>
   <para>If this field has no value, its
      value is <code>None</code>.
   </para>
</wadl:doc>
</param>'>
<!ENTITY protectedParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="protected"
   style="plain" required="true" type="xsd:boolean">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Defines whether the image can be deleted.</para>
</wadl:doc>
</param>'>
<!ENTITY idParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="id"
   style="plain" required="true" type="csapi:uuid">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The unique ID for the image.</para>
</wadl:doc>
</param>'>
<!ENTITY min_ramParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="min_ram"
   style="plain" required="true" type="csapi:uuid">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The minimum amount of RAM in MB that is required to boot the image.</para>
   <para>If this field has no value, its
      value is <code>None</code>.
   </para>
</wadl:doc>
</param>'>
<!ENTITY checksumParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="checksum"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Hash of the image data used. The Image service uses this value for
      verification.
   </para>
   <para>If this field has no value, its
      value is <code>None</code>.
   </para>
</wadl:doc>
</param>'>
<!ENTITY ownerParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="owner"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The ID of the owner, or tenant, of the image.</para>
   <para>If this field has no value, its
      value is <code>None</code>.
   </para>
</wadl:doc>
</param>'>
<!ENTITY visibilityParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="visibility"
   style="plain" required="true" type="xsd:boolean">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The image visibility.</para>
</wadl:doc>
</param>'>
<!ENTITY virtual_sizeParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="virtual_size"
   style="plain" required="true" type="xsd:int">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The virtual size of the image.</para>
   <para>If this field has no value, its
      value is <code>None</code>.
   </para>
</wadl:doc>
</param>'>
<!ENTITY propertiesParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="properties"
   style="plain" required="true" type="xsd:dict">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Properties, if any, that are associated with the image.</para>
</wadl:doc>
</param>'>
<!ENTITY sizeParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="size"
   style="plain" required="true" type="xsd:int">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The size of the image data, in bytes.</para>
   <para>If this field has no value, its
      value is <code>None</code>.
   </para>
</wadl:doc>
</param>'>
<!ENTITY image_idParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="image_id"
   style="template" type="csapi:uuid" required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN"
   title="Image ID">
   <para>
    Image ID stored through the image API. Typically a UUID.
   </para>
</wadl:doc>
</param>'>
<!ENTITY tagsParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="tags" style="plain" type="xsd:dict"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>Image tags.</para>
</wadl:doc>
</param>'>
<!ENTITY tagParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="tag"
   style="template" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" title="Tag">
   <para>Image tag.</para>
</wadl:doc>
</param>'>
<!ENTITY container_formatRequestParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="container_format" style="plain" type="xsd:string"
   required="false">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>Format of the container. Valid values are ami,
      ari, aki, bare, and ovf.
   </para>
</wadl:doc>
</param>'>
<!ENTITY disk_formatRequestParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="disk_format" style="plain" type="xsd:string"
   required="false">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>Format of the disk. If set, valid values are ami, ari, aki, vhd,
      vmdk, raw, qcow2, vdi, and iso.
   </para>
</wadl:doc>
</param>'>
<!ENTITY min_diskRequestParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="min_disk" style="plain" type="xsd:int"
   required="false">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>Amount of disk space in GB that is required to boot the image.</para>
</wadl:doc>
</param>'>
<!ENTITY min_ramRequestParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="min_ram" style="plain" type="xsd:int"
   required="false">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>Amount of RAM in MB that is required to boot the image.</para>
</wadl:doc>
</param>'>
<!ENTITY protectedRequestParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="protected" style="plain" type="xsd:bool"
   required="false">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>If true, image is not deletable.</para>
</wadl:doc>
</param>'>
<!ENTITY propertiesRequestParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="properties" style="plain" type="xsd:dict"
   required="false">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>Properties, if any, that are associated with the image.</para>
</wadl:doc>
</param>'>
<!ENTITY pathParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="path" style="plain" type="xsd:string"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>Image&apos;s property.</para>
</wadl:doc>
</param>'>
<!ENTITY valueParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="value" style="plain" type="xsd:string"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>Value of image property used in add or replace
      operations expressed in JSON notation. For example,
      you must enclose strings in quotation marks, and
      you do not enclose numeric values in quotation
      marks.
   </para>
</wadl:doc>
</param>'>
<!ENTITY opParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="op" style="plain" type="xsd:string"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>The operation. Valid values are:</para>
   <para><code>add</code>: adds a new property or location in the
      specified image.
   </para>
   <para><code>remove</code>: removes the specified image&apos;s
      property or location.
   </para>
   <para><code>replace</code>: replaces the value of a specified
      image&apos;s property or location.
   </para>
</wadl:doc>
</param>'>
<!ENTITY urlParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="url" style="plain" type="xsd:string"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>URL to access the image file kept in external
      store.
   </para>
</wadl:doc>
</param>'>
<!ENTITY metadataParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="metadata" style="plain" type="xsd:dict"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>The location metadata.</para>
</wadl:doc>
</param>'>
<!ENTITY locationParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="location" style="header" type="xsd:string"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>URL to access the image file kept in external store.</para>
</wadl:doc>
</param>'>
<!ENTITY location_urlParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="url" style="plain" type="xsd:string"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>URL to access the image file kept in external store. It
      appears when you set the <code>show_multiple_locations</code> option
      to <code>True</code> in the Image service&apos;s configuration
      file.
   </para>
</wadl:doc>
</param>'>
<!ENTITY direct_urlParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="direct_url" style="plain" type="xsd:string"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>URL to access the image file kept in external store. It
      appears when you set the <code>show_multiple_locations</code> option
      to <code>True</code> in the Image service&apos;s configuration
      file.
   </para>
</wadl:doc>
</param>'>
<!ENTITY images_schemaParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="schema" style="plain" type="xsd:string"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>URL for schema of the virtual machine images.</para>
</wadl:doc>
</param>'>
<!ENTITY firstParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="first" style="plain" type="xsd:string"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>URL for the first page of response.</para>
</wadl:doc>
</param>'>
<!ENTITY selfParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="self" style="plain" type="xsd:string"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>URL for the virtual machine image.</para>
</wadl:doc>
</param>'>
<!ENTITY fileParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="file" style="plain" type="xsd:string"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>URL for the virtual machine image file.</para>
</wadl:doc>
</param>'>
<!ENTITY image_schemaParameter '
<param xmlns="http://wadl.dev.java.net/2009/02"
   name="schema" style="plain" type="xsd:string"
   required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xml:lang="EN">
   <para>URL for schema of the virtual machine image.</para>
</wadl:doc>
</param>'>
<!ENTITY member_idParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="member_id"
   style="template" type="xsd:string">
    <wadl:doc xmlns="http://docbook.org/ns/docbook"
       xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN"
       title="Members">
       <para>
        Image member ID. For example, the tenant ID of the user that the image
        is being shared with.
       </para>
    </wadl:doc>
</param>'>
<!ENTITY metadefNamespaceListReqParameters '
<param xmlns="http://wadl.dev.java.net/2009/02" name="visibility"
   style="query" required="false" type="imageapi:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Filter parameter. Namespace visibility. Valid values are
      <code>public</code> and <code>private</code>.
      Default is <code>public</code> and
      <code>private</code>.
   </para>
</wadl:doc>
</param>
<param xmlns="http://wadl.dev.java.net/2009/02" name="resource_types"
   style="query" required="false" type="xsd:int">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Filter parameter. value as comma separated list
      For example, sending a <code>resource_types</code> filter
      of <code>OS::Glance::Image,OS::Nova::Flavor</code>, filters
      the namespaces to include only namespaces that are associated
      to the given resource types.
   </para>
</wadl:doc>
</param>
<param xmlns="http://wadl.dev.java.net/2009/02" name="sort_key"
   style="query" required="false" type="xsd:string" default="ALL">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Sort key. Use attributes like <code>namespace</code>
      for sorting. Default is <code>created_at</code>.
   </para>
</wadl:doc>
</param>
<param xmlns="http://wadl.dev.java.net/2009/02" name="sort_dir"
   style="query" required="false" type="xsd:string" default="ALL">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Sort direction. Valid values are <code>asc</code>
      (ascending) and <code>desc</code> (descending). Default is
      <code>desc</code>.
   </para>
</wadl:doc>
</param>'>
<!ENTITY namespacesParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="namespaces"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>A <code>namespaces</code> object.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefNamespace_idParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="namespace"
   style="template" type="csapi:uuid" required="true">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN"
   title="Namespace">
   <para>Unique namespace.</para>
</wadl:doc>
</param>' >
<!ENTITY metadefNamespaceParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="namespace"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The <code>namespace</code> is unique across all users.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefNSDisplayNameParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="display_name"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>User friendly name which could be used in UI for displaying namespace name.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefNSDescParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="description"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Detailed description for the namespace.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefNSVisibilityParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="visibility"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Namespace visibility. Public or private. Default is private.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefNSProtectedParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="protected"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Namespace protection for deletion. True of False. Default is false.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertiesParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="properties"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Property definition(s) of the namespace.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefObjectsParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="objects"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Object definition(s) of the namespace.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefResTypeAssocsParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="resource_type_associations"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Resource type(s) which are associated with this namespace.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefResTypeNameParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="name"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Name of the <code>resource type</code>.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefResTypePrefixParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="prefix"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Specifies the prefix to use for the given resource type.
      Any properties in the namespace should be prefixed with this
      prefix when being applied to the specified resource type.
      Must include prefix separator (e.g. a colon :).
   </para>
</wadl:doc>
</param>'>
<!ENTITY metadefResTypePropTargetParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="properties_target"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Some resource types allow more than one key / value pair
      per instance. For example, Cinder allows user and image
      metadata on volumes. Only the image properties metadata
      is evaluated by Nova (scheduling or drivers). This property
      allows a namespace target to remove the ambiguity.
   </para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyNameIdParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="property_name"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The name of the property.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyListParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="properties"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>A properties object.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyNameParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="name"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The <code>name</code> of the property.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyTitleParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="title"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>The <code>title</code> of the property.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyTypeParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="type"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Property <code>type</code>.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyEnumParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="enum"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Enumeration of property values.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyItemsParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="items"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>specifies schema for the items in an array.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyDescParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="description"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Property description.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyMinParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="minimum"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Minimum allowed numerical value.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyMaxParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="maximum"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Maximum allowed numerical value.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyMinLengthParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="minLength"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Minimum allowed string length.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyMaxLengthParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="maxLength"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Maximum allowed string length.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyPatternParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="pattern"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>A regular expression (ECMA 262) that a string value
      must match.
   </para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyMinItemsParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="minItems"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Minimum length of an array.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyMaxItemsParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="maxItems"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>Maximum length of an array.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyUniqueItemsParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="uniqueItems"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>whether all the values in the array must be distinct.</para>
</wadl:doc>
</param>'>
<!ENTITY metadefPropertyAdditionalItemsParameter '
<param xmlns="http://wadl.dev.java.net/2009/02" name="additionalItems"
   style="plain" required="true" type="xsd:string">
<wadl:doc xmlns="http://docbook.org/ns/docbook"
   xmlns:wadl="http://wadl.dev.java.net/2009/02" xml:lang="EN">
   <para>describes extra items, if "tuple typing"
      is being used. If the value of "items" is an array
      ("tuple typing"), and if the instance is longer than
      the list of schemas in "items", then the additional
      items are described by the schema in this property.
      If this value is false, then the instance cannot be
      longer than the list of schemas in "items". If this
      value is "true", that is equivalent to the
      empty schema (anything goes).
   </para>
</wadl:doc>
</param>'>