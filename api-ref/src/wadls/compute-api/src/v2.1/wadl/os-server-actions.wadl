<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE application [<!ENTITY % common  SYSTEM "../common.ent">
%common;]>
<!-- (C) 2013-2015 OpenStack Foundation, All Rights Reserved -->
<application xmlns="http://wadl.dev.java.net/2009/02"
    xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
    xmlns:wadl="http://wadl.dev.java.net/2009/02"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:csapi="http://docs.openstack.org/compute/api/v1.1">
    <resources base="https://servers.api.openstack.com"
        xml:id="os-server-actions-v2.1">
        <resource id="v2.1" path="//v2.1">
            <resource id="server_id" path="{server_id}">
                <resource id="action" path="action">
                    <method href="#rebootServer"/>
                    <method href="#rebuildServer"/>
                    <method href="#rebuildServer-preserve-ephemeral"/>
                    <method href="#resizeServer"/>
                    <method href="#confirmServer"/>
                    <method href="#revertServer"/>
                    <method href="#createImage"/>
                    <method href="#start"/>
                    <method href="#stop"/>
                </resource>
           </resource>
        </resource>
    </resources>
    <!-- *******************************************************-->
    <!--             Server Actions                             -->
    <!--********************************************************-->
    <method name="POST" id="rebootServer">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Reboot server">
            <para role="shortdesc">
                Reboots the specified server. Specify the <code>reboot</code>
                action in the request body.
            </para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../api_samples/servers/server-action-reboot.json"/>
                </wadl:doc>
            </representation>
        </request>
        <response status="202"/>
        <!-- Common, GET, postput, inProgress Faults--> &commonFaults; &getFaults; &postPutFaults;
        &rebootFaults; &inProgressFault; </method>
    <method name="POST" id="rebuildServer">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Rebuild server">
            <para role="shortdesc">
                Rebuilds the specified server. Specify the
                <code>rebuild</code> action in the request body.
            </para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../api_samples/servers/server-action-rebuild.json"/>
                </wadl:doc>
            </representation>
        </request>
        <response status="202">
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../api_samples/servers/server-action-rebuild-resp.json"/>
                </wadl:doc>
            </representation>
        </response>
        <!-- All other faults, build, common, get, post/put, and inProgress --> &commonFaults;
        &getFaults; &postPutFaults; &buildFaults; &inProgressFault; </method>
    <method name="POST" id="rebuildServer-preserve-ephemeral">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Rebuild server with preserve ephemeral">
            <para role="shortdesc">
                Rebuilds the specified server with preserve ephemeral option. Specify the
                <code>rebuild</code> action in the request body.
            </para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../api_samples/servers/server-action-rebuild-preserve-ephemeral.json"/>
                </wadl:doc>
            </representation>
        </request>
        <response status="202">
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../api_samples/servers/server-action-rebuild-resp.json"/>
                </wadl:doc>
            </representation>
        </response>
        <!-- All other faults, build, common, get, post/put, and inProgress --> &commonFaults;
        &getFaults; &postPutFaults; &buildFaults; &inProgressFault; </method>
    <method name="POST" id="resizeServer">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Resize server">
            <para role="shortdesc">
                Resizes the specified server. Specify the <code>resize</code>
                action in the request body.
            </para>
            <para>
                A successfully resized server shows a status of
                <code>VERIFY_RESIZE</code>, a vm_status of
                <code>RESIZED</code>, and a migration_status of
                <code>finished</code>. If you set the auto_confirm option of
                the Compute service to <code>True</code>, the Compute service
                automatically confirms the resize operation.
            </para>
            <para>Preconditions</para>
                <itemizedlist>
                  <listitem><para>You can only resize a server when its status is
                  <code>ACTIVE</code> or <code>SHUTOFF</code>.</para></listitem>
                <listitem><para>If the specified server is locked, you must have
                administrator privileges to resize the server.</para></listitem>
            </itemizedlist>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../api_samples/servers/server-action-resize.json"/>
                </wadl:doc>
            </representation>
        </request>
        <response status="202"/>
        <!-- All other faults, build, common, get, post/put, and inProgress --> &commonFaults;
        &getFaults; &postPutFaults; &buildFaults; &inProgressFault; </method>
    <method name="POST" id="confirmServer">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Confirm resized server">
            <para role="shortdesc">
                Confirms a pending resize action. Specify the
                <code>confirmResize</code> action in the request body.
            </para>
            <para>
                After you make this request, you typically must keep
                polling the server status to determine whether the request
                succeeded. A successfully confirming resize operation shows
                a status of <code>ACTIVE</code> or <code>SHUTOFF</code> and
                a migration_status of <code>confirmed</code>. You can also
                see the resized server in the compute node that OpenStack
                Compute manages.
            </para>
            <para>Preconditions</para>
            <itemizedlist>
                <listitem><para>You can only confirm the resized server where the status
                is <code>VERIFY_RESIZED</code>, the vm_status is <code>RESIZED</code>,
                and the migration_status is <code>finished</code> or
                <code>confirming</code>.</para></listitem>
                <listitem><para>If the specified server is locked, you must have
                administrator privileges to confirm the server.</para></listitem>
            </itemizedlist>
            <para>Troubleshooting</para>
            <itemizedlist>
                <listitem><para>If the specified server status remains
                <code>RESIZED</code>, the request failed. Ensure you meet the
                preconditions and run the request again. If the request fails again,
                investigate the compute backend or ask your cloud provider.
                </para></listitem>
            </itemizedlist>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../api_samples/servers/server-action-confirm-resize.json"/>
                </wadl:doc>
            </representation>
        </request>
        <response status="204"/>
        <!-- All other faults, build, common, get, post/put, and inProgress --> &commonFaults;
        &getFaults; &postPutFaults; &buildFaults; &inProgressFault; </method>
    <method name="POST" id="revertServer">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Revert resized server">
            <para role="shortdesc">
                Cancels and reverts a pending resize action. Specify the
                <code>revertResize</code> action in the request body.
            </para>
            <para>
                After you make this request, you typically must keep
                polling the server status to determine whether the request
                succeeded. A successfully reverting resize operation shows
                a status of <code>ACTIVE</code> or <code>SHUTOFF</code>
                and a migration_status of <code>reverted</code>. You can
                also see the reverted server in the compute node that
                OpenStack Compute manages.
            </para>
            <para>Preconditions</para>
            <itemizedlist>
                <listitem><para>You can only confirm the resized server where the status
                is <code>VERIFY_RESIZE</code> and the vm_status is <code>RESIZED</code>.
                </para></listitem>
                <listitem><para>If the specified server is locked, you must have
                administrator privileges to revert the resizing.</para></listitem>
            </itemizedlist>
            <para>Troubleshooting</para>
            <itemizedlist>
                <listitem><para>If the specified server status remains
                <code>RESIZED</code>, the request failed. Ensure you meet the
                preconditions and run the request again. If the request fails again,
                investigate the compute backend.</para></listitem>
                <listitem><para>The specified server is not reverted in the compute
                node that OpenStack Compute manages.</para></listitem>
            </itemizedlist>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../api_samples/servers/server-action-revert-resize.json"/>
                </wadl:doc>
            </representation>
        </request>
        <response status="202"/>
        <!-- All other faults, build, common, get, post/put, and inProgress --> &commonFaults;
        &getFaults; &postPutFaults; &buildFaults; &inProgressFault; </method>
    <method name="POST" id="createImage">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN" title="Create image">
            <para role="shortdesc">
                Creates an image. Specify the <code>createImage</code>
                action in the request body.
            </para>
            <para>
                After you make this request, you typically must keep polling
                the created image's status to determine whether the request
                succeeded. A successfully creating image operation shows an
                image's status of <code>available</code> and the serve's
                status goes back to the original status. You can also see the
                new image in the image backend that OpenStack Image service
                manages.
            </para>
            <para>Preconditions</para>
            <itemizedlist>
                <listitem><para>The specified server must exist.</para></listitem>
                <listitem><para>You can only create a new image from the server
                when its status is <code>ACTIVE</code>, <code>SHUTOFF</code>,
                <code>PAUSED</code>, or <code>SUSPENDED</code>.</para></listitem>
                <listitem><para>The connection to the Image service is valid.
                </para></listitem>
            </itemizedlist>
            <para>Troubleshooting</para>
            <itemizedlist>
            <listitem><para>If the image status remains uploading or shows
                another error status, the request failed. Ensure you meet the
                preconditions and run the request again. If the request fails
                again, investigate the image backend.
            </para></listitem>
            <listitem><para>If the server status does not go back to an original
                server's status, the request failed. Ensure you meet the preconditions,
                or check if there is another operation that causes race conditions
                for the server, then run the request again. If the request fails
                again, investigate the compute backend or ask your cloud provider.
            </para></listitem>
            <listitem><para>If the request fails due to an error on OpenStack
                Compute service, the image is purged from the image store that
                OpenStack Image service manages. Ensure you meet the preconditions
                and run the request again. If the request fails again, investigate
                OpenStack Compute service or ask your cloud provider.
            </para></listitem>
            </itemizedlist>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <xsdxt:code href="../api_samples/servers/server-action-create-image.json"/>
                </wadl:doc>
            </representation>
        </request>
        <response status="202">
        </response>
        <response status="409">
            <representation mediaType="application/json"/>
        </response>
        <!-- All other faults, build, common, get, post/put, and inProgress --> &commonFaults;
        &getFaults; &postPutFaults; &buildFaults; &inProgressFault; </method>
    <method name="POST" id="start">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
            title="Start server">
            <para role="shortdesc">Starts a stopped server and changes
                its status to <code>ACTIVE</code>.</para>
            <para>Preconditions</para>
            <itemizedlist>
                  <listitem><para>The server status must be <code>SHUTOFF</code>.
                  </para></listitem>
                <listitem><para>If the specified server is locked, you
                must have administrator privileges to start the server.
                </para></listitem>
            </itemizedlist>
            <para>Asynchronous Postconditions</para>
            <itemizedlist>
              <listitem><para>After you successfully start a server,
                its status changes to <code>ACTIVE</code>. The server appears on the compute
                node that the Compute service manages.</para></listitem>
            </itemizedlist>
            <para>Troubleshooting</para>
            <itemizedlist>
                  <listitem><para>If the server status does not change
                  to <code>ACTIVE</code>, the start operation failed. Ensure
                  that you meet the preconditions and run the request again.
                  If the request fails again, investigate whether another
                  operation is running that causes a race condition.
                  </para></listitem>
            </itemizedlist>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/wadl:docbook"
                    xml:lang="EN" title="Start server: JSON request">
                    <xsdxt:code
                        href="../api_samples/servers/server-action-start.json"
                    />
                </wadl:doc>
                <param xmlns="http://wadl.dev.java.net/2009/02"
                    name="os-start" style="plain" type="xsd:string"
                    required="true" id="os-start">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xmlns:wadl="http://wadl.dev.java.net/2009/02"
                        xml:lang="EN"><para>Specify the
                                <code>os-start</code> action in the
                            request body.</para></wadl:doc>
                </param>
            </representation>
        </request>
        <response status="204"/>
    </method>
    <method name="POST" id="stop">
        <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
            title="Stop server">
            <para role="shortdesc">Stops a running server and changes
                its status to <code>SHUTOFF</code>.</para>
            <para>Preconditions</para>
            <itemizedlist>
                  <listitem><para>The server status must be
                  <code>ACTIVE</code> or <code>ERROR</code>.
                  </para></listitem>
                <listitem><para>If the specified server is locked,
                you must have administrator privileges to stop
                the server.</para></listitem>
            </itemizedlist>
            <para>Asynchronous Postconditions</para>
            <itemizedlist>
                  <listitem><para>After you successfully stop a server,
                    its status changes to <code>SHUTOFF</code>. The server instance data appears
                    only on the compute node that Compute service manages.
                    </para></listitem>
            </itemizedlist>
        </wadl:doc>
        <request>
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/wadl:docbook"
                    xml:lang="EN" title="Stop server: JSON request">
                    <xsdxt:code
                        href="../api_samples/servers/server-action-stop.json"
                    />
                </wadl:doc>
                <param xmlns="http://wadl.dev.java.net/2009/02"
                    name="os-stop" style="plain" type="xsd:string"
                    required="true" id="os-stop">
                    <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xmlns:wadl="http://wadl.dev.java.net/2009/02"
                        xml:lang="EN"><para>Specify the
                                <code>os-stop</code> action in the
                            request body.</para></wadl:doc>
                </param>
            </representation>
        </request>
        <response status="204"/>
    </method>
</application>
